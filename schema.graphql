schema {
    query: Query
    mutation: Mutation
}

### PERSON TYPES ###

type Person {
    person_id: ID!
    username: String!
    email: String!
    location: String!
    created_at: String!
}

type PersonResult {
    success: Boolean!
    errors: [String]
    person: Person
}

type PersonsResult {
    success: Boolean!
    errors: [String]
    persons: [Person]
}

### QUESTION TYPES ###

type Question {
    question_id: ID!
    body: String!
    topic: Topic!   ### not sure how to link a drop down menu here
    created_at: String!
}

enum Topic {
    ESSAYS
    CODE_CHALLENGE
    TECHNICAL_INTERVIEW
    FINAL_INTERVIEW
    APPLICATION_TIMELINE
    INTERNSHIPS
    CAREER_PROSPECTS
    GENERAL
}

type QuestionResult {
    success: Boolean!
    errors: [String]
    question: Question
}

type QuestionsResult {
    success: Boolean!
    errors: [String]
    questions: [Question]
}

### QUERIES AND MUTATIONS TYPES ###

type Query {
    # PERSON QUERIES #
    listPersons: PersonsResult!
    getPerson(person_id: ID!): PersonResult!
    # LIST QUERIES #
    listQuestions: QuestionsResult!
    getQuestion(question_id: ID!): QuestionResult!
}

type Mutation {
    # Person MUTATIONS #
    createPerson(username: String!, location: String!, email: String!, created_at: String): PersonResult!
    updatePerson(person_id: ID!, username: String, location: String, email: String): PersonResult!
    deletePerson(person_id: ID!): PersonResult!
    # QUESTION MUTATIONS #
    createQuestion(body: String!, topic: String!, created_at: String): QuestionResult!
    updateQuestion(question_id: ID!, body: String!, topic: String): QuestionResult!
    deleteQuestion(question_id: ID!): QuestionResult!

}